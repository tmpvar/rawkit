// generate the current (>0) mip
// originally from: https://github.com/sebbbi/rust_test

#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout (local_size_x = 8, local_size_y = 8) in;

#include "../shared.h"

layout(binding = 0) uniform DepthPyramidUBO {
  DepthPyramidConstants depth_pyramid;
} push;

layout (binding = 1, r32f) uniform image2D tex;

void main() {
    uvec2 xy = uvec2(gl_GlobalInvocationID.xy);
    uvec4 src_rect = image_mip_rect(push.depth_pyramid.diameter, push.depth_pyramid.mip);
    uvec4 dst_rect = image_mip_rect(push.depth_pyramid.diameter, push.depth_pyramid.mip + 1);

    // Could use image gather instead of 4 loads...
    uvec2 xy2 = 2 * xy;
    float z00 = imageLoad(tex, ivec2(src_rect.xy + xy2 + uvec2(0, 0))).x;
    float z01 = imageLoad(tex, ivec2(src_rect.xy + xy2 + uvec2(0, 1))).x;
    float z10 = imageLoad(tex, ivec2(src_rect.xy + xy2 + uvec2(1, 0))).x;
    float z11 = imageLoad(tex, ivec2(src_rect.xy + xy2 + uvec2(1, 1))).x;

    float z_min = max(max(z00, z01), max(z10, z11));
    imageStore(tex, ivec2(dst_rect.xy + xy), vec4(z_min,0.0,0.0,0.0));
}
